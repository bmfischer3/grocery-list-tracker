AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template with a simple API definition

Parameters:
  BranchName:
    Type: String
    Description: The name of the GitHub branch used to create this stack. To be overriden in deploy function. 
    Default: dev
  
  EnvironmentType:
    Type: String
    Description: "The environment type for which this is being deployed into."
    Default: dev
    AllowedValues:
      - dev
      - prod
      - stage
    ConstraintDescription: "Must be dev, prod, or stage."

  AlarmEmail:
    Default: "{{resolve:ssm:email_address:1}}"
    Description: "Email address to notify of operational issues"
    Type: "String"

Conditions:
  IsProd: !Equals [ !Ref EnvironmentType, prod]
  IsDev: !Equals [ !Ref EnvironmentType, dev]

Mappings:
  EnvConfig:
    # DynamoDB
    dev:
      DeletionProtectionEnabled: false
    prod:
      DeletionProtectionEnabled: true


Resources:
  ApiGatewayApi:
  # This creates the rest API and sets the name of the stage to the Environment Type
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref EnvironmentType
  
  # Adds a GET method at the root resource via an Api event
  ApiFunction: 
    Type: AWS::Serverless::Function
    Properties:
      Events:
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref ApiGatewayApi

        RootProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGatewayApi

      Role: !GetAtt ListTrackerIAMExecutionRole.Arn
      Runtime: python3.10
      Handler: index.handler
      CodeUri: ../api/ 
      LoggingConfig:
        LogGroup: !Ref ApiRootLogs

  ApiRootLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      
  ListTrackerIAMExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: 
             - lambda.amazonaws.com
             - apigateway.amazonaws.com
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: anything
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: '*'
              # TODO: Specify the exact resource later. 
              Resource: '*'
            - Effect: Allow
              Action: '*'
              Resources:
                - !GetAtt ApiRootLogs.Arn
                - !Sub "${ApiRootLogs.Arn}/*"


              # Below returns JSON string error. 
              # Resource:
              #   - !GetAtt ApiRootLogs.Arn
              #   - !Sub "${ApiRootLogs.Arn}/*"

# SQS


  ListTrackQueue: 
    Type: AWS::SQS::Queue


  AlarmTopic: 
    Type: AWS::SNS::Topic
    Properties: 
      Subscription: 
        - 
          Endpoint: 
            Ref: "AlarmEmail"
          Protocol: "email"

  QueueDepthAlarm: 
    Type: AWS::CloudWatch::Alarm
    Condition: IsDev
    Properties: 
      AlarmDescription: "Alarm if queue depth increases to more than 10 messages"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions: 
        -
          Name: "QueueName"
          Value: !GetAtt ListTrackQueue.QueueName
      Statistic: "Sum"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: "10"
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions: !Ref AlarmTopic
      InsufficientDataActions: !Ref AlarmTopic

  ListTrackerDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      DeletionProtectionEnabled: !FindInMap [ EnvConfig, !Ref EnvironmentType, DeletionProtectionEnabled]
      TableName: !Sub "${AWS::StackName}-lists"
      AttributeDefinitions:
        - 
          AttributeName: "user_id"
          AttributeType: "S"
        -
          AttributeName: "list_id"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "user_id"
          KeyType: "HASH"   # Partition Key
        - 
          AttributeName: "list_id"
          KeyType: "RANGE"   # Sort Key

      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      
      Tags:
        - Key: name
          Value: dyanmodbtable 


Outputs: 
  QueueURL: 
    Description: "URL of new Amazon SQS Queue"
    Value: !Ref ListTrackQueue

  QueueARN: 
    Description: "ARN of new AmazonSQS Queue"
    Value: !GetAtt ListTrackQueue.Arn

  QueueName: 
    Description: "Name of new Amazon SQS Queue"
    Value: !GetAtt ListTrackQueue.QueueName