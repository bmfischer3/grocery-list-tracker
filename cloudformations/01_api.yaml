AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template with a simple API definition

Parameters:
  BranchName:
    Type: String
    Description: The name of the GitHub branch used to create this stack. To be overriden in deploy function. 
    Default: dev
  Region:
    Type: String
    Description: Region that the stack is deployed to. 
    Default: us-east-1

Resources:

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev

  ApiFunction: # Adds a GET method at the root resource via an Api event
    Type: AWS::Serverless::Function
    Properties:
      Events:
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref ApiGatewayApi
        RootProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref ApiGatewayApi
      Role: !GetAtt 
        - !Sub "ListTrackerIAMExecutionRole-{$BranchName}"
        - Arn
      Runtime: python3.10
      Handler: index.handler
      CodeUri: ../api/ 
      LoggingConfig:
        LogGroup: !Ref ApiRootLogs

  Authorizer:
    Type: 'AWS::ApiGateway::Authorizer'
    Properties:
      AuthorizerCredentials: !GetAtt
        - !Sub "ListTrackerIAMExecutionRole-{$BranchName}"
        - Arn
      AuthorizerResultTtlInSeconds: '300'
      AuthorizerUri: !Join 
        - ''
        - - 'arn:aws:apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt 
            - !Sub "ListTrackerIAMExecutionRole-${BranchName}.Arn"
          - /invocations
      Type: TOKEN
      IdentitySource: method.request.header.auth-token
      Name: ListTrackerAuthorizer24
      RestApiId: !Ref ApiGatewayApi


  ApiRootLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      LogGroupName: !Sub "${AWS::StackName}-ApiRoot-${BranchName}"
      
  ListTrackerIAMExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "ListTrackerIAMExecutionRole-${BranchName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: 
             - lambda.amazonaws.com
             - apigateway.amazonaws.com
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: ListTrackerDynamoDBAccessPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: '*'
              # TODO: Specify the exact resource later. 
              Resource: '*'
            - Effect: Allow
              Action: '*'
              Resource: 
                - !GetAtt ApiRootLogs.Arn
                - !Sub "${ApiRootLogs.Arn}/*"
